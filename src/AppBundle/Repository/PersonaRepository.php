<?php

namespace AppBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * PersonaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PersonaRepository extends \Doctrine\ORM\EntityRepository {

    public function findLikeName($term) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $result = $qb->select('n')
                        ->from('AppBundle:Persona', 'n')
                        ->where($qb->expr()
                                ->like('n.nombre', $qb->expr()
                                        ->literal('%' . $term . '%')))
                        ->setMaxResults(10)->getQuery()->getResult();
        return $result;
    }

    public function findByDependencia($term, $dependencia) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $result = $qb->select('n')
                        ->from('AppBundle:Persona', 'n')
                        ->leftJoin(\AppBundle\Entity\Ubicacion::class, "u", "WITH",
                                "n.id = u.id")
                        ->where('u.dependencia = :dependencia')
                        ->andWhere($qb->expr()
                                ->like('n.nombre', $qb->expr()
                                        ->literal('%' . $term . '%')))
                        ->setParameter('dependencia', $dependencia)
                        ->setMaxResults(10)->getQuery()->getResult();
        return $result;
    }

    public function createPersonaFilter() {
        $qb = $this->getEntityManager()->createQueryBuilder('p');
        $result = $qb->select('p')
                ->from(\AppBundle\Entity\Persona::class, 'p')
                ->innerJoin(\AppBundle\Entity\Ubicacion::class, "u", "WITH",
                        "p.id=u.id")
                ->innerJoin(\AppBundle\Entity\Dependencia::class, "d", "WITH",
                        "u.dependencia=d.id")
                ->addOrderBy('p.apellido', 'ASC');

        return $result;
    }

}
