<?php

namespace AppBundle\Repository;

/**
 * PersonaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PersonaRepository extends \Doctrine\ORM\EntityRepository {

    public function findLikeName($term) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $result = $qb->select('n')
                        ->from('AppBundle:Persona', 'n')
                        ->leftJoin(\AppBundle\Entity\Ubicacion::class, "u", "WITH", "n.id = u.id")
                        ->where($qb->expr()
                                ->like('n.nombre', $qb->expr()
                                        ->literal('%' . $term . '%')))
                        ->orWhere($qb->expr()
                                ->like('n.apellido', $qb->expr()
                                        ->literal('%' . $term . '%')))
                        ->andWhere('u.fechaBaja IS NULL')
                        ->andWhere('n.id <> 1038')
                        ->setMaxResults(10)->getQuery()->getResult();
        return $result;
    }

    public function findByDependencia($term, $dependencia, $expediente_id) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $result = $qb->select('n')
                        ->from('AppBundle:Persona', 'n')
                        ->leftJoin(\AppBundle\Entity\Ubicacion::class, "u", "WITH", "n.id = u.id")
                        ->leftJoin(\AppBundle\Entity\Expediente::class, "e", "WITH", "e.id = :id")
                        ->leftJoin(\AppBundle\Entity\MovimientoExpediente::class, "m", "WITH", "e.movimientoActual = m.id")
                        ->leftJoin(\AppBundle\Entity\Ubicacion::class, "u2", "WITH", "m.ubicacion = u2.id")
                        ->leftJoin(\AppBundle\Entity\Dependencia::class, "d", "WITH", "d.id = u2.dependencia")                                          
                        ->andWhere('m.ubicacion != u.id')
                        ->andWhere('u.fechaBaja IS NULL')
                        ->andWhere('n.id <> 1038')
                        ->andWhere($qb->expr()
                                ->like('n.nombre', $qb->expr()
                                        ->literal('%' . $term . '%')))
                        ->orWhere($qb->expr()
                                ->like('n.apellido', $qb->expr()
                                        ->literal('%' . $term . '%')))
                        ->andWhere('u.dependencia = u2.dependencia')
                        ->setParameter('id' ,$expediente_id)
                        ->setMaxResults(10)->getQuery()->getResult();
        return $result;
    }

    public function createPersonaFilter($dependencia = null) {
        $qb = $this->getEntityManager()->createQueryBuilder('p');
        $result = $qb->select('p')
                ->from(\AppBundle\Entity\Persona::class, 'p')
                ->innerJoin(\AppBundle\Entity\Ubicacion::class, "u", "WITH", "p.id=u.id")
                ->innerJoin(\AppBundle\Entity\Dependencia::class, "d", "WITH", "u.dependencia=d.id")
                ->where('u.fechaBaja IS NULL')
                ->addOrderBy('p.apellido', 'ASC');
        if ($dependencia != null) {
            $result->andWhere('d.id = :dependencia')
                    ->andWhere('p.id <> 1038')
                    ->setParameter('dependencia', $dependencia);
        }


        return $result;
    }

    public function findAllPersonas() {
        $qb = $this->getEntityManager()->createQueryBuilder('p');
        $result = $qb->select('p')
                ->from(\AppBundle\Entity\Persona::class, 'p')
                ->innerJoin(\AppBundle\Entity\Ubicacion::class, "u", "WITH", "p.id=u.id")
                ->where('u.fechaBaja IS NULL');

        return $result->getQuery()->getResult();

    }

    public function findByPersona($persona) {
        $qb = $this->getEntityManager()->createQueryBuilder('p');
        $result = $qb->select('p')
                ->from(\AppBundle\Entity\Persona::class, 'p')
                ->innerJoin(\AppBundle\Entity\Ubicacion::class, "u", "WITH", "p.id=u.id")
                ->where('p.id = :persona')
                ->andWhere('u.fechaBaja IS NULL')
                ->addOrderBy('p.apellido', 'ASC')
                ->setParameter('persona', $persona);

        $persona = $result->getQuery()->getResult();

        if (count($persona) > 0) {
            return $persona[0];
        } else {
            return null;
        }
    }

}
